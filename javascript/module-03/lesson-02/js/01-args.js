/**
 * –ü—Å–µ–≤–¥–æ–º–∞—Å–∏–≤ arguments –∏ Array.from
 */
// console.log(message);
// console.log(messageInfo);

// ! Function Declaration
function showMessage(text, type, htmlElement = message) {
  // 1 - text = undefined
  // 2 - type = undefined
  // 3 - htmlElement = <p></p>
  // 4 - arguments = []

  htmlElement.textContent = `${text}`;
  htmlElement.classList.add(type);

  // console.log('üöÄ ~ arguments:', arguments);
  const args = Array.from(arguments);
  // console.log('üöÄ ~ args:', args);

  if (args.includes('info')) {
    htmlElement.classList.add('pulse');
  }

  // return undefined
}

showMessage('This is error message', 'error');

showMessage('This is info message', 'info', messageInfo);

showMessage('This is warning message', 'warning', messageWarning);
/**
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é add –¥–ª—è —Å–∫–ª–∞–¥–∞–Ω–Ω—è –¥–æ–≤—ñ–ª—å–Ω–æ—ó
 * –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ (—á–∏—Å–µ–ª)
 */

function add() {
  // arguments = [1, 2]
  let total = 0;

  for (const number of arguments) {
    total += number;
  }

  return total;
  // return undefined
  // return;
}

const result1 = add(1, 2); // 3
// console.log('üöÄ ~ result1:', result1);
const result2 = add(10, 20, 40, 60); // 130
// console.log('üöÄ ~ result2:', result2);
const result3 = add(-10, 30, 50, -100, 200); // 170
// console.log('üöÄ ~ result3:', result3);

/**
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é calAverage() —è–∫–∞ –ø—Ä–∏–π–º–∞—î –¥–æ–≤—ñ–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å
 * –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —ó—Ö–Ω—î —Å–µ—Ä–µ–¥–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è. –£—Å—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏
 * –±—É–¥—É—Ç—å –ª–∏—à–µ —á–∏—Å–ª–∞–º–∏.
 */
function calAverage() {
  // arguments = [1, 2, 3, 4]
  // TODO: —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ –±—É–¥—å-—è–∫–∏–π –º–µ—Ç–æ–¥ –º–∞—Å–∏–≤—É,
  // TODO: —Ç–æ–¥—ñ –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ arguments —É –ø–æ–≤–Ω–æ—Ü—ñ–Ω–Ω–∏–π –º–∞—Å–∏–≤ —á–µ—Ä–µ–∑ Array.form()

  // ! —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–±—Ä–∞—Ç–∏ –µ–ª–µ–º–µ–Ω—Ç–∏ –≤ —Ü–∏–∫–ª—ñ –∞–±–æ –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –¥–æ–≤–∂–∏–Ω—É –ø—Å–µ–≤–¥–æ–º–∞—Å–∏–≤—É,
  // ! —Ç–æ–¥—ñ –ø—Ä–∞—Ü—é—î–º–æ –∑ argumnets

  let sum = 0;

  for (const number of arguments) {
    sum += number;
  }

  return sum / arguments.length;

  // const numbers = Array.from(arguments);
  // numbers.push(10);

  // console.log(numbers);

  // console.log(arguments.length);

  // return undefined
}

console.log(calAverage(1, 2, 3, 4)); // 2.5
console.log(calAverage(14, 8, 2)); // 8
console.log(calAverage(27, 43, 2, 8, 36)); // 23.2

function multiply() {
  if (true) {
    // 1 nothing -> undefined
    // 2 return; -> undefined
    // 3 return undefined; -> undefined
  }

  // return undefined
}
